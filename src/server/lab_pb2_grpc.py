# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import lab_pb2 as lab__pb2


class AutoLogicalRulesApplyStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.getNextApplyIdxRequest = channel.unary_unary(
        '/mlpb.AutoLogicalRulesApply/getNextApplyIdxRequest',
        request_serializer=lab__pb2.NextApplyIdxRequest.SerializeToString,
        response_deserializer=lab__pb2.NextApplyIdxResponse.FromString,
        )


class AutoLogicalRulesApplyServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def getNextApplyIdxRequest(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AutoLogicalRulesApplyServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'getNextApplyIdxRequest': grpc.unary_unary_rpc_method_handler(
          servicer.getNextApplyIdxRequest,
          request_deserializer=lab__pb2.NextApplyIdxRequest.FromString,
          response_serializer=lab__pb2.NextApplyIdxResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'mlpb.AutoLogicalRulesApply', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
